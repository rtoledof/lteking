package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

// Ads returns AdsResolver implementation.
func (r *Resolver) Ads() AdsResolver { return &adsResolver{r} }

// Charge returns ChargeResolver implementation.
func (r *Resolver) Charge() ChargeResolver { return &chargeResolver{r} }

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Profile returns ProfileResolver implementation.
func (r *Resolver) Profile() ProfileResolver { return &profileResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// Token returns TokenResolver implementation.
func (r *Resolver) Token() TokenResolver { return &tokenResolver{r} }

// Trip returns TripResolver implementation.
func (r *Resolver) Trip() TripResolver { return &tripResolver{r} }

// User returns UserResolver implementation.
func (r *Resolver) User() UserResolver { return &userResolver{r} }

// Vehicle returns VehicleResolver implementation.
func (r *Resolver) Vehicle() VehicleResolver { return &vehicleResolver{r} }

// AddPlace returns AddPlaceResolver implementation.
func (r *Resolver) AddPlace() AddPlaceResolver { return &addPlaceResolver{r} }

// ChargeRequest returns ChargeRequestResolver implementation.
func (r *Resolver) ChargeRequest() ChargeRequestResolver { return &chargeRequestResolver{r} }

// RequestTrip returns RequestTripResolver implementation.
func (r *Resolver) RequestTrip() RequestTripResolver { return &requestTripResolver{r} }

// UpdateProfile returns UpdateProfileResolver implementation.
func (r *Resolver) UpdateProfile() UpdateProfileResolver { return &updateProfileResolver{r} }

// UpdateVehicle returns UpdateVehicleResolver implementation.
func (r *Resolver) UpdateVehicle() UpdateVehicleResolver { return &updateVehicleResolver{r} }
