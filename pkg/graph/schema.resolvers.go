package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

// Ads returns AdsResolver implementation.
func (r *Resolver) Ads() AdsResolver { return &adsResolver{r} }

// CategoryPrice returns CategoryPriceResolver implementation.
func (r *Resolver) CategoryPrice() CategoryPriceResolver { return &categoryPriceResolver{r} }

// Charge returns ChargeResolver implementation.
func (r *Resolver) Charge() ChargeResolver { return &chargeResolver{r} }

// Coupon returns CouponResolver implementation.
func (r *Resolver) Coupon() CouponResolver { return &couponResolver{r} }

// DirectionResponse returns DirectionResponseResolver implementation.
func (r *Resolver) DirectionResponse() DirectionResponseResolver {
	return &directionResponseResolver{r}
}

// Legs returns LegsResolver implementation.
func (r *Resolver) Legs() LegsResolver { return &legsResolver{r} }

// Message returns MessageResolver implementation.
func (r *Resolver) Message() MessageResolver { return &messageResolver{r} }

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Order returns OrderResolver implementation.
func (r *Resolver) Order() OrderResolver { return &orderResolver{r} }

// OrderItem returns OrderItemResolver implementation.
func (r *Resolver) OrderItem() OrderItemResolver { return &orderItemResolver{r} }

// Plan returns PlanResolver implementation.
func (r *Resolver) Plan() PlanResolver { return &planResolver{r} }

// Profile returns ProfileResolver implementation.
func (r *Resolver) Profile() ProfileResolver { return &profileResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// Route returns RouteResolver implementation.
func (r *Resolver) Route() RouteResolver { return &routeResolver{r} }

// Step returns StepResolver implementation.
func (r *Resolver) Step() StepResolver { return &stepResolver{r} }

// Token returns TokenResolver implementation.
func (r *Resolver) Token() TokenResolver { return &tokenResolver{r} }

// User returns UserResolver implementation.
func (r *Resolver) User() UserResolver { return &userResolver{r} }

// Vehicle returns VehicleResolver implementation.
func (r *Resolver) Vehicle() VehicleResolver { return &vehicleResolver{r} }

// VoiceInstructions returns VoiceInstructionsResolver implementation.
func (r *Resolver) VoiceInstructions() VoiceInstructionsResolver {
	return &voiceInstructionsResolver{r}
}

// AddPlace returns AddPlaceResolver implementation.
func (r *Resolver) AddPlace() AddPlaceResolver { return &addPlaceResolver{r} }

// ChargeRequest returns ChargeRequestResolver implementation.
func (r *Resolver) ChargeRequest() ChargeRequestResolver { return &chargeRequestResolver{r} }

// ConfirmOrder returns ConfirmOrderResolver implementation.
func (r *Resolver) ConfirmOrder() ConfirmOrderResolver { return &confirmOrderResolver{r} }

// DirectionRequest returns DirectionRequestResolver implementation.
func (r *Resolver) DirectionRequest() DirectionRequestResolver { return &directionRequestResolver{r} }

// LoginRequest returns LoginRequestResolver implementation.
func (r *Resolver) LoginRequest() LoginRequestResolver { return &loginRequestResolver{r} }

// RateRequest returns RateRequestResolver implementation.
func (r *Resolver) RateRequest() RateRequestResolver { return &rateRequestResolver{r} }

// UpdatePlace returns UpdatePlaceResolver implementation.
func (r *Resolver) UpdatePlace() UpdatePlaceResolver { return &updatePlaceResolver{r} }

// UpdateProfile returns UpdateProfileResolver implementation.
func (r *Resolver) UpdateProfile() UpdateProfileResolver { return &updateProfileResolver{r} }

// UpdateVehicle returns UpdateVehicleResolver implementation.
func (r *Resolver) UpdateVehicle() UpdateVehicleResolver { return &updateVehicleResolver{r} }
